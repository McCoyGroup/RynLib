#
#   CORE:
#       Defines how to build the core that RynLib will require inside the Dockerized environment
#

# See https://docs.docker.com/engine/reference/builder/
#
# Additional libraries must be added with great care and consideration for
# environments not using Docker e.g. MacOSX or Conda


#
#   DEFAULT CONFIG FOR ENTOS
#       Defines the base configuration needed in case we want to link in a version of Entos to use
#

##############################################################################################################

#
#   VERY KINDLY GIVEN TO USE BY PETER BYGRAVE
#
#
FROM ubuntu:focal-20200319

ARG DEBIAN_FRONTEND=noninteractive

RUN \
 apt-get update &&\
 apt-get -y install ccache &&\
 apt-get -y install g++ &&\
 apt-get -y install git &&\
 apt-get -y install intel-mkl &&\
 apt-get -y install libarmadillo-dev &&\
 apt-get -y install libboost-dev &&\
 apt-get -y install libboost-filesystem-dev libboost-system-dev libboost-thread-dev &&\
 apt-get -y install libxc-dev &&\
 apt-get -y install make &&\
 apt-get -y install python &&\
 apt-get -y install wget &&\
 apt-get -y install xsltproc &&\
 apt-get clean

ENV MKL_THREADING_LAYER=TBB

# 2020-04-16 apt only has cmake-3.16.3, upgrading to 3.17 enables
# `cmake -DBLA_VENDOR=Intel10_64_dyn` to find libmkl-rt.so via FindBLAS.cmake
RUN \
  cd /opt/ &&\
  wget https://github.com/Kitware/CMake/releases/download/v3.17.1/cmake-3.17.1-Linux-x86_64.tar.gz &&\
  tar xf cmake-3.17.1-Linux-x86_64.tar.gz &&\
  rm cmake-3.17.1-Linux-x86_64.tar.gz

ENV PATH=/opt/cmake-3.17.1-Linux-x86_64/bin/:${PATH}

# libecpint
RUN \
  git clone https://github.com/peterbygrave/libecpint /libecpint &&\
  cd /libecpint &&\
  git checkout v0.0.0 &&\
  mkdir /libecpint_build &&\
  cd /libecpint_build &&\
  cmake -DCMAKE_CXX_FLAGS=-O3 ../libecpint &&\
  make -j $(nproc) &&\
  make test &&\
  make install &&\
  cd / &&\
  rm -r /libecpint*

# libcint
#
# Setting -DBLA_VENDOR=Intel10_64_dyn to find libmkl-rt.so
#  - See Issue #1082
RUN \
  wget https://github.com/sunqm/libcint/archive/v3.0.18.tar.gz --content-disposition &&\
  tar xf libcint-3.0.18.tar.gz &&\
  mkdir libcint_build &&\
  cd libcint_build &&\
  cmake /libcint-3.0.18/ -DBLA_VENDOR=Intel10_64_dyn &&\
  make -j $(nproc) &&\
  make install &&\
  cd / &&\
  rm -r /libcint*

# OpenMM
# Explicitly disable building of LGPL-licensed CUDA and OpenCL platforms
# to ensure that only MIT and MIT-like licensed elements of OpenMM are included
# in containers
RUN \
  apt-get -y install libfftw3-3 doxygen swig &&\
  wget https://github.com/openmm/openmm/archive/7.4.1.tar.gz --content-disposition &&\
  tar xf openmm-7.4.1.tar.gz &&\
  mkdir /openmm_build &&\
  cd /openmm_build &&\
  cmake /openmm-7.4.1 -D OPENMM_BUILD_CUDA_LIB:BOOL=OFF -D OPENMM_BUILD_OPENCL_LIB:BOOL=OFF &&\
  make -j $(nproc) &&\
  make install &&\
  cd / &&\
  rm -r /openmm*

ENV CMAKE_PREFIX_PATH=/usr/local/openmm:${CMAKE_PREFIX_PATH}

# Additional libraries for expire version
RUN \
apt-get -y install libboost-date-time-dev &&\
apt-get -y install faketime &&\
apt-get clean

ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/entos/lib
ENV PATH=$PATH:/opt/entos

#########################################################################################################################

#
#   RynLib Config:
#       Defines core utilities that RynLib will want to use and which we don't want to have to link in later
#
RUN \
  apt-get -y install python3-pip &&\
  pip3 install numpy &&\
  pip3 install scipy &&\
  pip3 install wget &&\
  pip3 install memory_profiler matplotlib

RUN \
  apt-get -y install g++ &&\
  apt-get -y install gfortran &&\
  apt-get -y install git &&\
  apt-get -y install gdb &&\
  apt-get clean